import iziToast from "izitoast";
import "izitoast/dist/css/iziToast.min.css";
import { getImages, perPage, page } from "./js/pixabay-api";
// import * as getImgRequest from "./js/pixabay-api"
import { galleryMarkup } from "./js/render-functions";
import SimpleLightbox from "simplelightbox";
import "simplelightbox/dist/simple-lightbox.min.css";

const refs = {
    form: document.querySelector(".js-form"),
    gallery: document.querySelector('.js-gallery'),
    loader: document.querySelector('.js-submit-loader'),
    loadMore: document.querySelector('.js-load-more'),
    loader2: document.querySelector('.js-more-loader'),
}

refs.form.addEventListener('submit', onSubmit);
refs.loadMore.addEventListener('click', onLoadMore);


let inputRequest = ''
let totalHitsPages = 0;


async function onSubmit(evt) {
    try {
        evt.preventDefault()
        refs.gallery.innerHTML = '';
        
        const inp = evt.currentTarget.elements.input.value.trim()
        inputRequest = inp;

        this.reset()
        
        refs.loadMore.classList.add('hidden')
        refs.loader.classList.remove('hidden')
        
        //–ó–∞–ø–∏—Ç –Ω–∞ API –∑ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
        const getImgs = await getImages(inp);
        
        //–†–æ–∑–º—ñ—Ç–∫–∞ –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é —á–∏ –ø—Ä–∏–π—â–ª–æ —â–æ—Å—å –≤–∑–∞–≥–∞–ª—ñ —ñ —á–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –±—ñ–ª—å—à–µ 15-—Ç–∏ (—á–∏ —Å—Ç–∞–≤–∏—Ç–∏ –∫–Ω–æ–ø–∫—É Load More)
        markupImages(getImgs);
        function markupImages({data}) {
                // console.log(data);
                if (data.total < 1) {
                    iziToast.show({
                        message: 'üö´ Sorry, there are no images matching your search query. Please try again!',
                        position: "topRight",
                        timeout: 3000,
                        backgroundColor: 'red',
                        messageColor: 'white',
                        progressBar: false,
                    });
                    
                } else {
                    if (data.totalHits > 15) {
                        totalHitsPages = data.totalHits;
                        //–î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É Load More, —è–∫—â–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤ –±–∞–∑—ñ –±—ñ–ª—å—à–µ 15
                        refs.loadMore.classList.remove('hidden')
                    }
                    
                    return refs.gallery.insertAdjacentHTML('beforeend', galleryMarkup(data.hits))
                }
        }
        //–û–Ω–æ–≤–ª–µ–Ω–Ω—è SimpleLightBox
        await gallerySLB.refresh();
        
    } catch (err) {   
        console.log(err)
    } finally {
            //–ü—Ä–∏–±–∏—Ä–∞—î–º–æ loader - –∫–æ–ª–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        refs.loader.classList.add('hidden'); 
        }
}


async function onLoadMore() {
  
    try {
        refs.loadMore.classList.add('hidden')
        refs.loader2.classList.remove('hidden')

        //–í–∏–∑–Ω–∞—á–∞—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫, –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        const totalPages = Math.ceil(totalHitsPages / perPage);

    
        if ((totalPages < page) || (totalPages === page)) {
            iziToast.show({
                message: "We're sorry, but you've reached the end of search results.",
                position: "topRight",
                timeout: 3000,
                backgroundColor: 'blue',
                messageColor: 'white',
                progressBar: false,
            });
            refs.loader2.classList.add('hidden');
        } else {
            const newImage = await getImages(inputRequest)
            refs.gallery.insertAdjacentHTML('beforeend', galleryMarkup(newImage.data.hits))
            gallerySLB.refresh();

            refs.loader2.classList.add('hidden');
            refs.loadMore.classList.remove('hidden')

            //–ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –µ–∫—Ä–∞–Ω—É –Ω–∞ –≤–∏—Å–æ—Ç—É –¥–≤–æ—Ö –∫–∞—Ä—Ç–æ–∫ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤ –≥–∞–ª–µ—Ä–µ—é
            const imgCard = document.querySelector('.cat-card');
            const yScroll = imgCard.getBoundingClientRect().height * 2.75
            window.scrollBy({
                top: yScroll,
                left: 0,
                behavior: "smooth",
            })
        }
    
    } catch (err) {
        console.log(err);
    }
}

let gallerySLB = new SimpleLightbox('.gallery a', { captionsData: 'alt', captionDelay: 250, history: false })



//–ß–û–ú–£ –ü–Ü–°–õ–Ø –ü–ï–†–ï–ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –°–¢–û–†–Ü–ù–ö–ò –ó–ê–ü–ò–¢–ò –î–£–ë–õ–Æ–Æ–¢–¨–°–Ø –Ü –î–†–£–ì–ò–ú –Ü–î–ï –ü–£–°–¢–ò–ô, –ë–ï–ó –£–õ–Æ–ß–û–í–û–ì–û –°–õ–û–í–ê?
// –¶–ï –Ø–ö–û–°–¨ –ü–û–í'–Ø–ó–ê–ù–û –ó RESET() –£ 33 –†–Ø–î–ö–£ –¢–ê –¢–ò–ú –î–ï –Ø –î–ê–Æ –ù–û–í–ï –ó–ù–ê–ß–ï–ù–ù–Ø inputRequest
// –£ 30 - –ë–ê–ì, –£ 34 - –í–°–ï –î–û–ë–†–ï.

